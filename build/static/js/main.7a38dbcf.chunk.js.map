{"version":3,"sources":["assets/shadow.png","assets/shadowLeft.png","store/fakeData.js","store/inventory.store.js","store/ui.store.js","utils/roundTwoDecimal.js","store/cart.store.js","store/root.js","components/beerPreview/BeerPreview.js","components/PlacesAutocomplete.js","components/Checkout.js","assets/icon.png","components/header/Header.js","components/menu/BeerItem.js","components/menu/CartItem.js","components/menu/Menu.js","App.js","theme/theme.js","index.js"],"names":["dummyData","_id","offset","name","tagline","description1","description2","isNew","alcohol","size","cost","primaryColor","secondaryColor","InventoryItem","data","root","_size","_cost","makeAutoObservable","this","InventoryStore","inventory","observable","map","forEach","x","set","UIStore","selectedId","checkout","inventoryStore","get","width","background","borderRadius","round","number","Math","Number","EPSILON","CartItem","count","CartStore","cart","add","id","cartItem","remove","delete","Array","from","values","total","array","roundTwoDecimal","configure","enforceActions","RootStoreInstance","uiStore","cartStore","RootStoreContext","createContext","useStores","useContext","BeerPreview","observer","selected","getTagElements","split","last","pop","join","getTitleElements","first","shift","justify","align","flex","overflow","mr","zIndex","direction","textAlign","mt","fontWeight","fontSize","toUpperCase","as","color","bg","px","py","letterSpacing","w","h","my","opacity","src","shadowLeft","className","shrink","objectFit","canShadow","ml","css","transform","position","top","left","style","textShadow","maxW","p","pl","mb","border","cursor","_hover","boxShadow","onClick","PlacesAutocomplete","onSelect","usePlacesAutocomplete","requestOptions","debounce","ready","value","suggestions","status","setValue","clearSuggestions","ref","useOnclickOutside","handleSelect","description","getGeocode","address","then","results","getLatLng","lat","lng","console","log","catch","error","onChange","e","target","disabled","placeholder","mx","rounded","suggestion","place_id","structured_formatting","main_text","secondary_text","palefire","Checkout","useState","loaded","maps","setMap","polyLine","useRef","polyCircle","dropGPS","setDrop","dragging","setDragging","far","setFar","PalefireIcon","boxSize","DropoffIcon","center","setCenter","zoom","setZoom","isOpen","onClose","borderBottom","borderColor","result","getDistance","latitude","longitude","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","defaultCenter","defaultZoom","draggable","onChildMouseDown","onChildMouseUp","onChildMouseMove","childProps","mouse","options","styles","featureType","elementType","stylers","visibility","hue","onGoogleApiLoaded","current","Polyline","strokeColor","strokeOpacity","strokeWeight","path","setOptions","Circle","fillColor","fillOpacity","radius","Header","m","icon","BeerItem","item","borderRightWidth","onMouseEnter","borderTopRightRadius","borderBottomRightRadius","Menu","borderBottomWidth","totalCost","overflowY","scrollCSS","pr","App","breakpoints","createBreakpoints","sm","md","lg","xl","theme","extendTheme","colors","secondary","grey","input","primary","blue","green","red","gold","sizes","components","Button","baseStyle","_focus","shadows","outline","config","useSystemColorMode","initialColorMode","fonts","heading","body","darkTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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S,CACL,CACIC,WAAY,QAIxB,CACIH,YAAa,8BACbC,YAAa,kBACbC,QAAS,CACL,CACIC,WAAY,QAIxB,CACIH,YAAa,8BACbC,YAAa,SACbC,QAAS,CACL,CACIC,WAAY,MAEhB,CACIC,IAAK,aAIjB,CACIJ,YAAa,8BACbC,YAAa,mBACbC,QAAS,CACL,CACIC,WAAY,QAIxB,CACIH,YAAa,MACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,WACbC,YAAa,WACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,WACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,OACbC,YAAa,WACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,OACbC,YAAa,kBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,OACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,eACbC,YAAa,WACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,eACbC,YAAa,kBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,eACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,UACbC,YAAa,WACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,kBACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,QACbC,YAAa,WACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,QACbC,YAAa,mBACbC,QAAS,CACL,CACInH,MAAO,aAInB,CACIiH,YAAa,QACbC,YAAa,qBACbC,QAAS,CACL,CACInH,MAAO,eAM3BsH,kBAAmB,gBAAGvL,EAAH,EAAGA,IAAK2I,EAAR,EAAQA,KAAR,OAAmBC,EAAO,CAAEF,QAAQ,EAAMC,OAAM3I,SA5WvE,UA8WI,cAACsJ,EAAD,CAAcjC,IAAK,WAAYC,KAAM,cA5bzD0B,EACyB,OAArBH,EAAS2C,QACT3C,EAAS2C,QAAU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","file":"static/js/main.7a38dbcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/shadow.5a09f07f.png\";","export default __webpack_public_path__ + \"static/media/shadowLeft.d109be29.png\";","export const dummyData = [\n    {\n        _id: 'can1',\n        offset: '0px',\n        name: 'Street Beer',\n        tagline: 'Feel the vibe',\n        description1:\n            'Vulputate enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Porttitor eget dolor morbi non. Augue ut lectus arcu bibendum at varius vel.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '4.6',\n        size: 330,\n        cost: 4.99,\n        primaryColor: '#f0690a',\n        secondaryColor: '#23148f',\n    },\n    {\n        _id: 'can2',\n        offset: '0px',\n        name: 'Street Beer',\n        tagline: 'Feel the vibe',\n        description1:\n            'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ullam accusamus fugit sint necessitatibus quos atque quis soluta assumenda omnis consequuntur.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '4.8',\n        size: 330,\n        cost: 4.99,\n        primaryColor: '#fb7edf',\n        secondaryColor: '#23148f',\n    },\n    {\n        _id: 'can3',\n        offset: '0px',\n        name: 'Street Beer',\n        tagline: 'Feel the vibe',\n        description1:\n            'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ullam accusamus fugit sint necessitatibus quos atque quis soluta assumenda omnis consequuntur.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '5.1',\n        size: 330,\n        cost: 4.99,\n        primaryColor: '#98cb23',\n        secondaryColor: '#fff',\n    },\n    {\n        _id: 'can4',\n        offset: '0px',\n        name: 'Half Cocked',\n        tagline: 'Keep it simple',\n        description1:\n            'Blandit libero volutpat sed cras ornare arcu. Ac auctor augue mauris augue neque gravida in fermentum et. Maecenas volutpat blandit aliquam etiam erat velit scelerisque in dictum.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '5.1',\n        size: 330,\n        cost: 5.99,\n        primaryColor: '#BD2c02',\n        secondaryColor: '#fff',\n    },\n    {\n        _id: 'can5',\n        offset: '-290px',\n        name: 'Chebougan Brewing',\n        tagline: 'Blood Orange Honey',\n        description1:\n            'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ullam accusamus fugit sint necessitatibus quos atque quis soluta assumenda omnis consequuntur.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '5.1',\n        size: 330,\n        cost: 5.99,\n        primaryColor: '#f0881f',\n        secondaryColor: '#3e1e20',\n    },\n    {\n        _id: 'can6',\n        offset: '-290px',\n        name: 'Heady Hunter',\n        tagline: 'Hazy India Pale Ale',\n        description1:\n            'Auctor eu augue ut lectus. Aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices sagittis. Donec massa sapien faucibus et molestie ac feugiat sed lectus. Enim eu turpis egestas pretium.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '6.1',\n        size: 360,\n        cost: 5.99,\n        primaryColor: '#f0690a',\n        secondaryColor: '#020202',\n    },\n    {\n        _id: 'can7',\n        offset: '0px',\n        name: 'Blackwoods Pale Ale',\n        tagline: 'Sunday Road',\n        description1:\n            'Odio facilisis mauris sit amet massa vitae tortor. Facilisi cras fermentum odio eu feugiat pretium nibh ipsum. Purus in massa tempor nec feugiat nisl pretium.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '6.1',\n        size: 360,\n        cost: 3.99,\n        primaryColor: '#5eaaa8',\n        secondaryColor: '#fff',\n    },\n    {\n        _id: 'can8',\n        offset: '0px',\n        name: 'Enigma Pale Ale',\n        tagline: 'Sunday Road',\n        description1:\n            'Mauris commodo quis imperdiet massa tincidunt nunc pulvinar sapien et. Habitant morbi tristique senectus et netus. Parturient montes nascetur ridiculus mus mauris vitae ultricies. Ultrices sagittis orci a scelerisque purus semper eget. Interdum posuere lorem ipsum dolor.',\n        description2: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas, eum.',\n        isNew: false,\n        alcohol: '6.1',\n        size: 360,\n        cost: 3.99,\n        primaryColor: '#f0690a',\n        secondaryColor: '#fff',\n    },\n]\n","import { makeAutoObservable, observable } from 'mobx'\nimport { dummyData } from './fakeData'\n// eslint-disable-next-line no-unused-vars\nimport { RootStore } from './root'\n\nexport class InventoryItem {\n    _id = ''\n    name = ''\n    tagline = ''\n    description1 = ''\n    description2 = ''\n    isNew = false\n    alcohol = ''\n    _size = 0\n    offset = ''\n    _cost = 5\n    primaryColor = 'blue'\n    secondaryColor = 'orange'\n    /**\n     * @type {RootStore}\n     */\n    root = null\n\n    constructor(data, root) {\n        makeAutoObservable(this)\n        this._id = data._id\n        this.offset = data.offset\n        this._cost = data.cost\n        this.name = data.name\n        this.tagline = data.tagline\n        this.description1 = data.description1\n        this.description2 = data.description2\n        this.isNew = data.isNew\n        this.alcohol = data.alcohol\n        this._size = data.size\n        this._cost = data.cost\n        this.primaryColor = data.primaryColor\n        this.secondaryColor = data.secondaryColor\n        this.root = root\n    }\n\n    get cost() {\n        return '$' + this._cost\n    }\n    get size() {\n        return this._size + 'ML'\n    }\n}\n\nexport class InventoryStore {\n    /**\n     * @type {Map.<string,InventoryItem>}\n     */\n    inventory = new observable.map()\n\n    /**\n     * @type {RootStore}\n     */\n    root = null\n\n    constructor(root) {\n        makeAutoObservable(this)\n        this.root = root\n        dummyData.forEach((x) => {\n            this.inventory.set(x._id, new InventoryItem(x, root))\n        })\n    }\n}\n","import { makeAutoObservable, observable } from 'mobx'\n// eslint-disable-next-line no-unused-vars\nimport { RootStore } from './root'\n\nexport class UIStore {\n    /**\n     * @type {RootStore}\n     */\n    root = null\n\n    selectedId = 'can1'\n\n    checkout = false\n\n    get selected() {\n        return this.root.inventoryStore.inventory.get(this.selectedId)\n    }\n\n    constructor(root) {\n        makeAutoObservable(this)\n        this.root = root\n    }\n\n    get scrollCSS() {\n        return {\n            '&::-webkit-scrollbar': {\n                width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n                width: '6px',\n            },\n            '&::-webkit-scrollbar-thumb': {\n                background: '#4d4d4d',\n                borderRadius: '24px',\n            },\n        }\n    }\n}\n","export default function round(number) {\n    return Math.round((number + Number.EPSILON) * 100) / 100\n}\n","import { makeAutoObservable, observable } from 'mobx'\nimport { InventoryItem } from './inventory.store'\n// eslint-disable-next-line no-unused-vars\nimport { RootStore } from './root'\nimport roundTwoDecimal from '../utils/roundTwoDecimal'\n\nexport class CartItem {\n    _id = ''\n    count = 0\n    /**\n     * @type {RootStore}\n     */\n    root = null\n\n    constructor(_id, root) {\n        makeAutoObservable(this)\n        this._id = _id\n        this.count = 1\n        this.root = root\n    }\n    /**\n     * @return {InventoryItem}\n     */\n    get inventory() {\n        return this.root.inventoryStore.inventory.get(this._id)\n    }\n}\n\nexport class CartStore {\n    /**\n     * @type {Map.<string,CartItem>}\n     */\n    cart = new observable.map()\n\n    /**\n     * @type {RootStore}\n     */\n    root = null\n\n    constructor(root) {\n        makeAutoObservable(this)\n        this.root = root\n    }\n\n    add = (id) => {\n        const cartItem = this.cart.get(id)\n        if (cartItem) {\n            cartItem.count++\n        } else {\n            this.cart.set(id, new CartItem(id, this.root))\n        }\n    }\n\n    remove = (id) => {\n        const cartItem = this.cart.get(id)\n        if (cartItem) {\n            cartItem.count--\n            if (cartItem.count === 0) {\n                this.cart.delete(id)\n            }\n        }\n    }\n\n    get array() {\n        return Array.from(this.cart.values())\n    }\n\n    get totalCost() {\n        let total = 0\n        this.array.forEach((x) => {\n            total += x.count * x.inventory._cost\n        })\n        return '$' + roundTwoDecimal(total)\n    }\n}\n","import { createContext, useContext } from 'react'\nimport { configure, makeAutoObservable, observable } from 'mobx'\nimport { InventoryStore } from './inventory.store'\nimport { UIStore } from './ui.store'\nimport { CartStore } from './cart.store'\n\nconfigure({\n    enforceActions: 'never',\n})\n\nexport class RootStore {\n    /**\n     * @type {InventoryStore}\n     */\n    inventoryStore = null\n\n    /**\n     * @type {UIStore}\n     */\n    uiStore = null\n\n    /**\n     * @type {CartStore}\n     */\n    cartStore = null\n\n    constructor() {\n        makeAutoObservable(this)\n        this.inventoryStore = new InventoryStore(this)\n        this.uiStore = new UIStore(this)\n        this.cartStore = new CartStore(this)\n    }\n}\n\nexport const RootStoreInstance = new RootStore()\n\nconst RootStoreContext = createContext(RootStoreInstance)\n\nexport const useStores = () => useContext(RootStoreContext)\n","import { Flex, Image, Text, Box, Circle } from '@chakra-ui/react'\nimport React from 'react'\n// import can1 from '../../.`/public/${selected._id}/can1.png`\nimport canShadow from '../../assets/shadow.png'\nimport shadowLeft from '../../assets/shadowLeft.png'\nimport './beer-preview.css'\nimport { useStores } from '../../store/root'\nimport { observer } from 'mobx-react-lite'\nconst BeerPreview = observer(() => {\n    // const {uiStore} = useStore\n    const { uiStore, cartStore } = useStores()\n    const { selected } = uiStore\n\n    function getTagElements() {\n        const split = selected?.tagline.split(' ')\n        const last = split.pop()\n        return [split.join(' '), last]\n    }\n\n    function getTitleElements() {\n        const split = selected?.name.split(' ')\n        const first = split.shift()\n        return [split.join(' '), first]\n    }\n\n    return (\n        <Flex justify=\"flex-end\" align=\"center\" flex={1} overflow=\"hidden\" mr=\"100px\" zIndex={1}>\n            <Flex direction=\"column\" mr=\"-178px\" textAlign=\"right\" align=\"flex-end\" mt={16} zIndex={1}>\n                <Text fontWeight=\"black\" fontSize=\"4xl\">\n                    {getTagElements()[0].toUpperCase()}{' '}\n                    <Text as=\"span\" color={selected.secondaryColor} bg={selected.primaryColor} px={3} py={4}>\n                        {getTagElements()[1].toUpperCase()}\n                    </Text>\n                </Text>\n                <Flex direction=\"column\" align=\"flex-end\" mr={8} mt={10}>\n                    <Flex direction=\"column\" textAlign=\"center\" align=\"center\">\n                        <Text fontWeight=\"semibold\" fontSize=\"5xl\">\n                            {getTitleElements()[1].toUpperCase()}\n                        </Text>\n                        <Text fontSize=\"3xl\" letterSpacing=\"10px\" mt=\"-15px\" color={selected.primaryColor}>\n                            •{getTitleElements()[0].toUpperCase()}•\n                        </Text>\n                    </Flex>\n                </Flex>\n                <Box w=\"300px\" h=\"1px\" bg=\"input.100\" my={3} />\n                <Flex color=\"grey.300\" mr={8}>\n                    <Text fontSize=\"xl\" mr={5}>\n                        ALC{' '}\n                        <Text as=\"span\" color=\"white\" fontWeight=\"bold\">\n                            4.5%\n                        </Text>\n                    </Text>\n                    <Text fontSize=\"xl\" color=\"white\">\n                        330ML\n                    </Text>\n                </Flex>\n            </Flex>\n            <Flex mr=\"-180px\" h=\"450px\" mt=\"130px\" opacity=\"1\" zIndex={2}>\n                <Image src={shadowLeft} className=\"selector\" />\n            </Flex>\n            <Flex h=\"50vh\" direction=\"column\" mt={selected.offset} shrink={0}>\n                <Image src={`/image/${selected._id}.png`} objectFit=\"contain\" zIndex={3} className=\"selector\" />\n                <Image\n                    src={canShadow}\n                    mt=\"-70px\"\n                    ml=\"50px\"\n                    zIndex={2}\n                    css={{ transform: 'scale(1.5)' }}\n                    className=\"selector\"\n                />\n                <Image\n                    src={`/image/${selected._id}.png`}\n                    zIndex={1}\n                    className=\"mask-img selector\"\n                    mt=\"-100px\"\n                    objectFit=\"contain\"\n                />\n                <Flex>\n                    <Box\n                        w=\"430px\"\n                        h=\"500px\"\n                        ml=\"100px\"\n                        position=\"absolute\"\n                        zIndex={1}\n                        bg={selected.primaryColor}\n                        className=\"clip\"\n                        top=\"80px\"\n                    />\n                    <Box\n                        w=\"430px\"\n                        h=\"500px\"\n                        ml=\"170px\"\n                        mt=\"20px\"\n                        position=\"absolute\"\n                        zIndex={1}\n                        bg={selected.primaryColor}\n                        className=\"clip-2\"\n                        top=\"80px\"\n                    />\n                    <Box\n                        position=\"absolute\"\n                        h=\"100%\"\n                        w=\"100%\"\n                        bg=\"secondary.300\"\n                        ml=\"-490px\"\n                        top={0}\n                        left={0}\n                        zIndex={0}\n                        className=\"bg-clip\"\n                    />\n                    <Text\n                        position=\"absolute\"\n                        zIndex={2}\n                        ml=\"370px\"\n                        top=\"90px\"\n                        fontWeight=\"black\"\n                        fontSize=\"4xl\"\n                        style={{ textShadow: '3px 3px 5px rgba(0,0,0,.7)' }}\n                    >\n                        {selected.cost}\n                    </Text>\n                    <Flex\n                        position=\"absolute\"\n                        zIndex={2}\n                        ml=\"320px\"\n                        top=\"160px\"\n                        style={{ transform: 'rotate(130deg) scale(1.2)' }}\n                    >\n                        <Image src={shadowLeft} />\n                    </Flex>\n                </Flex>\n            </Flex>\n            <Flex ml=\"-106px\" direction=\"column\" mt=\"120px\" justify=\"flex-end\" zIndex={2}>\n                <Text maxW=\"300px\" bg=\"black\" p={3} pl={5}>\n                    {selected.description1}\n                </Text>\n                <Box w=\"315px\" h=\"1px\" bg=\"input.100\" my={4} ml={-4} />\n                <Text maxW=\"300px\" pl={5}>\n                    {selected.description2}\n                </Text>\n                <Flex>\n                    <Flex\n                        ml={3}\n                        mt={8}\n                        mb={-8}\n                        border=\"2px\"\n                        p={3}\n                        px={5}\n                        zIndex={10}\n                        cursor=\"pointer\"\n                        justify=\"center\"\n                        color={selected.primaryColor}\n                        _hover={{ boxShadow: `0 0 10px ${selected.primaryColor}` }}\n                        onClick={() => {\n                            cartStore.add(selected._id)\n                        }}\n                    >\n                        <Text fontWeight=\"bold\" fontSize=\"xl\" zIndex={10}>\n                            ADD TO CART\n                        </Text>\n                    </Flex>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n})\n\nexport default BeerPreview\n","import usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport { Box, Text, Center, Flex, Image, Circle, Icon, Spacer, Button, Input } from '@chakra-ui/react'\n\nconst PlacesAutocomplete = ({ onSelect }) => {\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            /* Define search scope here */\n        },\n        debounce: 300,\n    })\n    const ref = useOnclickOutside(() => {\n        clearSuggestions()\n    })\n\n    const handleSelect =\n        ({ description }) =>\n        () => {\n            setValue(description, false)\n            clearSuggestions()\n\n            getGeocode({ address: description })\n                .then((results) => getLatLng(results[0]))\n                .then(({ lat, lng }) => {\n                    onSelect?.({ lat, lng })\n                    console.log('📍 Coordinates: ', { lat, lng })\n                })\n                .catch((error) => {\n                    console.log('😱 Error: ', error)\n                })\n        }\n\n    const renderSuggestions = () => (\n        <Flex direction=\"column\" py={2} mx={2} rounded=\"lg\" bg=\"rgba(20, 19, 22,.97)\">\n            {data.map((suggestion) => {\n                const {\n                    place_id,\n                    structured_formatting: { main_text, secondary_text },\n                } = suggestion\n\n                return (\n                    <Flex\n                        key={place_id}\n                        onClick={handleSelect(suggestion)}\n                        zIndex={100}\n                        align=\"center\"\n                        px={4}\n                        py={2}\n                        cursor=\"pointer\"\n                        _hover={{ bg: 'secondary.100' }}\n                    >\n                        <Text>{main_text}</Text>\n                        <Text fontSize=\"sm\" color=\"grey.300\" ml={2}>\n                            {secondary_text}\n                        </Text>\n                    </Flex>\n                )\n            })}\n        </Flex>\n    )\n\n    return (\n        <Flex ref={ref} mb={3} direction=\"column\" zIndex={99}>\n            <Input\n                bg=\"secondary.200\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                disabled={!ready}\n                placeholder=\"Look up your address...\"\n            />\n            {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n            {status === 'OK' && <ul>{renderSuggestions()}</ul>}\n        </Flex>\n    )\n}\n\nexport default PlacesAutocomplete\n","import React, { useState, useEffect, useRef, Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport { getDistance } from 'geolib'\n\nimport {\n    Box,\n    Text,\n    Center,\n    Flex,\n    Image,\n    Circle,\n    Icon,\n    Input,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Button,\n} from '@chakra-ui/react'\nimport PlacesAutocomplete from './PlacesAutocomplete'\nimport { observer } from 'mobx-react-lite'\nimport { IoBeer } from 'react-icons/io5'\nimport { FaMapMarkerAlt } from 'react-icons/fa'\nimport { useStores } from '../store/root'\nconst palefire = { lat: 38.4481179, lng: -78.8721451 }\nconst Checkout = observer(() => {\n    const { uiStore } = useStores()\n    const [map, setMap] = useState({\n        loaded: false,\n        map: null,\n        maps: null,\n    })\n    const polyLine = useRef(null)\n    const polyCircle = useRef(null)\n    const [dropGPS, setDrop] = useState(null)\n    const [dragging, setDragging] = useState(false)\n    const [far, setFar] = useState(false)\n    const PalefireIcon = () => {\n        return (\n            <Flex direction=\"column\" align=\"center\" mt=\"-50px\">\n                <Flex>\n                    <Text fontSize=\"md\" bg=\"secondary.200\" px={3} py={1} mb={1} rounded=\"full\">\n                        Brewlivery\n                    </Text>\n                </Flex>\n                <Center boxSize={10} rounded=\"full\" bg=\"primary.100\" boxShadow=\"2px 2px 10px #0d0c0e\">\n                    <IoBeer size={20} />\n                </Center>\n            </Flex>\n        )\n    }\n\n    const DropoffIcon = () => {\n        return (\n            <Flex direction=\"column\" align=\"center\">\n                <Flex bg=\"secondary.200\" px={3} py={1} mb={1} rounded=\"full\" w=\"90px\" mt=\"-50px\" justify=\"center\">\n                    <Text fontSize=\"md\" shrink={0}>\n                        {far ? 'Too Far' : 'Drop off'}\n                    </Text>\n                </Flex>\n                <Center boxSize={10} rounded=\"full\" bg={far ? 'red.100' : 'green.100'} boxShadow=\"2px 2px 10px #0d0c0e\">\n                    <FaMapMarkerAlt size={20} />\n                </Center>\n            </Flex>\n        )\n    }\n\n    const [center, setCenter] = useState(palefire)\n    const [zoom, setZoom] = useState(15)\n\n    function createPath() {\n        if (dropGPS) {\n            if (polyLine.current === null) {\n                polyLine.current = new map.maps.Polyline({\n                    strokeColor: '#ff6a00',\n                    strokeOpacity: 1,\n                    strokeWeight: 5,\n                    path: [palefire, dropGPS], //decodedPolyline.geometry.coordinates\n                })\n            } else {\n                polyLine.current.setOptions({\n                    path: [palefire, dropGPS],\n                })\n            }\n        } else {\n            if (polyLine.current !== null)\n                polyLine.current.setOptions({\n                    path: [],\n                })\n        }\n        if (polyLine.current !== null) polyLine.current.setMap(map.map)\n        return null\n    }\n\n    function createCircle() {\n        if (map.loaded && polyCircle.current === null && far) {\n            polyCircle.current = new map.maps.Circle({\n                strokeColor: '#ff6a00',\n                strokeOpacity: 0.6,\n                fillColor: '#FF0000',\n                fillOpacity: 0.25,\n                strokeWeight: 2,\n                center: palefire,\n                radius: 1000,\n            })\n        } else if (map.loaded && polyCircle.current && !far && polyCircle.current.strokeOpacity !== 0) {\n            polyCircle.current.setOptions({\n                strokeOpacity: 0,\n                fillOpacity: 0,\n            })\n        } else if (map.loaded && polyCircle.current && far && polyCircle.current.strokeOpacity !== 0.6) {\n            polyCircle.current.setOptions({\n                strokeOpacity: 0.6,\n                fillOpacity: 0.25,\n            })\n        }\n\n        if (polyCircle.current !== null) polyCircle.current.setMap(map.map)\n        return null\n    }\n\n    return (\n        <Modal isOpen={uiStore.checkout} onClose={() => (uiStore.checkout = false)} size=\"6xl\">\n            <ModalOverlay bg=\"rgba(0,0,0,.8)\" />\n            <ModalContent bg=\"secondary.200\">\n                <ModalHeader borderBottom=\"1px\" borderColor=\"secondary.100\">\n                    <Text>Pick drop off</Text>\n                    <ModalCloseButton />\n                </ModalHeader>\n                <ModalBody>\n                    <Flex h=\"500px\" mt={4} overflow=\"hidden\" direction=\"column\" position=\"relative\">\n                        <PlacesAutocomplete\n                            onSelect={(result) => {\n                                setCenter(result)\n                                setDrop(result)\n                                setZoom(16)\n                                if (\n                                    getDistance(\n                                        { latitude: palefire.lat, longitude: palefire.lng },\n                                        { latitude: result.lat, longitude: result.lng },\n                                    ) > 200\n                                ) {\n                                    if (!far) setFar(true)\n                                } else {\n                                    if (far) setFar(false)\n                                }\n                            }}\n                        />\n                        <Flex rounded={8} flex={1} overflow=\"hidden\" position=\"absolute\" h=\"90%\" w=\"100%\" mt=\"50px\">\n                            <GoogleMapReact\n                                yesIWantToUseGoogleMapApiInternals\n                                bootstrapURLKeys={{ key: 'AIzaSyDBaop0mN9naU3tMcWyNLjzHErLbTl9g8E' }}\n                                defaultCenter={center}\n                                center={center}\n                                defaultZoom={zoom}\n                                zoom={zoom}\n                                onChange={({ center, zoom }) => {\n                                    if (center && center.lat) {\n                                        setCenter(center)\n                                    }\n                                    if (zoom) {\n                                        setZoom(zoom)\n                                    }\n                                }}\n                                draggable={!dragging}\n                                onChildMouseDown={() => {\n                                    setDragging(true)\n                                }}\n                                onChildMouseUp={() => setDragging(false)}\n                                onChildMouseMove={(key, childProps, mouse) => {\n                                    if (key === 'dropoff') {\n                                        setDrop({ lat: mouse.lat, lng: mouse.lng })\n                                        if (\n                                            getDistance(\n                                                { latitude: palefire.lat, longitude: palefire.lng },\n                                                { latitude: mouse.lat, longitude: mouse.lng },\n                                            ) > 1000\n                                        ) {\n                                            if (!far) {\n                                                setFar(true)\n                                            }\n                                        } else {\n                                            if (far) {\n                                                setFar(false)\n                                            }\n                                        }\n                                    }\n                                }}\n                                options={{\n                                    styles: [\n                                        {\n                                            featureType: 'all',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#262626',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'all',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#746855',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'all',\n                                            elementType: 'labels.text.stroke',\n                                            stylers: [\n                                                {\n                                                    color: '#242f3e',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'administrative.locality',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#d59563',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'geometry.fill',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                                {\n                                                    color: '#2d2d2d',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'geometry.stroke',\n                                            stylers: [\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                                {\n                                                    hue: '#ff0000',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'labels',\n                                            stylers: [\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                                {\n                                                    hue: '#00ff24',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'labels.text',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                                {\n                                                    color: '#ffffff',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'labels.text.stroke',\n                                            stylers: [\n                                                {\n                                                    hue: '#76ff00',\n                                                },\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.man_made',\n                                            elementType: 'labels.icon',\n                                            stylers: [\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural',\n                                            elementType: 'all',\n                                            stylers: [\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural',\n                                            elementType: 'geometry.fill',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                                {\n                                                    hue: '#00fffb',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural.landcover',\n                                            elementType: 'all',\n                                            stylers: [\n                                                {\n                                                    visibility: 'off',\n                                                },\n                                                {\n                                                    hue: '#ff00df',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural.landcover',\n                                            elementType: 'geometry.fill',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural.landcover',\n                                            elementType: 'geometry.stroke',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural.landcover',\n                                            elementType: 'labels',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                                {\n                                                    hue: '#0024ff',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'landscape.natural.landcover',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    visibility: 'on',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'poi',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#d59563',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'poi.park',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#263c3f',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'poi.park',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#6b9a76',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#38414e',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road',\n                                            elementType: 'geometry.stroke',\n                                            stylers: [\n                                                {\n                                                    color: '#212a37',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#9ca5b3',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road.highway',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#746855',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road.highway',\n                                            elementType: 'geometry.stroke',\n                                            stylers: [\n                                                {\n                                                    color: '#1f2835',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'road.highway',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#f3d19c',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'transit',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#2f3948',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'transit.station',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#d59563',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'water',\n                                            elementType: 'geometry',\n                                            stylers: [\n                                                {\n                                                    color: '#17263c',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'water',\n                                            elementType: 'labels.text.fill',\n                                            stylers: [\n                                                {\n                                                    color: '#515c6d',\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            featureType: 'water',\n                                            elementType: 'labels.text.stroke',\n                                            stylers: [\n                                                {\n                                                    color: '#17263c',\n                                                },\n                                            ],\n                                        },\n                                    ],\n                                }}\n                                onGoogleApiLoaded={({ map, maps }) => setMap({ loaded: true, maps, map })}\n                            >\n                                <PalefireIcon lat={38.4481179} lng={-78.8721451} />\n                                {createPath()}\n                                {createCircle()}\n                                {dropGPS && (\n                                    <DropoffIcon key=\"dropoff\" lat={dropGPS.lat} lng={dropGPS.lng} draggable={true} />\n                                )}\n                            </GoogleMapReact>\n                        </Flex>\n                    </Flex>\n                </ModalBody>\n                <ModalFooter>\n                    <Button>Continue</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n})\n\nexport default Checkout\n","export default __webpack_public_path__ + \"static/media/icon.bf3fb2de.png\";","import { Box, Flex, Spacer, Text, Image } from '@chakra-ui/react'\nimport React from 'react'\nimport icon from '../../assets/icon.png'\nconst Header = () => {\n    const HeaderBtn = ({ title }) => {\n        return (\n            <Flex mr={10} color=\"grey.300\" _hover={{ color: 'primary.100' }} cursor=\"pointer\">\n                <Text>{title}</Text>\n            </Flex>\n        )\n    }\n\n    return (\n        <Flex align=\"center\" zIndex={2} m={4} ml={6}>\n            <Image src={icon} w=\"33px\" mr={2} mt={1} />\n            <Flex direction=\"column\">\n                <Text fontSize=\"4xl\" fontWeight=\"bold\">\n                    BREW\n                    <Text as=\"span\" color=\"primary.100\" fontWeight=\"normal\">\n                        LIVERY\n                    </Text>\n                </Text>\n                <Box w=\"210px\" h=\"1px\" bg=\"input.100\" mt=\"-5px\" />\n                <Text letterSpacing=\"10px\" fontSize=\"sm\" ml=\"2px\" color=\"grey.300\">\n                    OVER THE{' '}\n                    <Text as=\"span\" color=\"white\" fontWeight=\"bold\">\n                        AIR\n                    </Text>\n                </Text>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { Box, Text, Center, Flex, Image, Circle, Icon } from '@chakra-ui/react'\nimport { observer } from 'mobx-react-lite'\nimport { InventoryItem } from '../../store/inventory.store'\nimport { useStores } from '../../store/root'\n\nconst BeerItem = observer(({ _id }) => {\n    const { inventoryStore, uiStore } = useStores()\n    const item = inventoryStore.inventory.get(_id)\n    const selected = uiStore.selectedId === _id\n    return (\n        <Flex\n            p={6}\n            cursor=\"pointer\"\n            borderRightWidth=\"4px\"\n            borderColor={selected ? item.primaryColor : 'transparent'}\n            bg={selected ? 'secondary.200' : 'transparent'}\n            // _hover={{ bg: 'secondary.200', borderColor: item.primaryColor }}\n            onMouseEnter={() => {\n                uiStore.selectedId = _id\n            }}\n            borderTopRightRadius={8}\n            borderBottomRightRadius={8}\n            align=\"center\"\n        >\n            <Image src={`/image/${_id}.png`} w=\"40px\" />\n            <Flex direction=\"column\" ml={6}>\n                <Text fontWeight=\"bold\">{item.name}</Text>\n                <Text fontSize=\"sm\" color=\"grey.300\">\n                    {item.tagline}\n                </Text>\n                <Flex fontSize=\"sm\" mt={2}>\n                    <Text mr={2}>{item.alcohol}%</Text>\n                    <Text>{item.size}</Text>\n                </Flex>\n            </Flex>\n            <Flex justify=\"flex-end\" fontSize=\"xl\" fontWeight=\"bold\" flex={1}>\n                <Text>{item.cost}</Text>\n            </Flex>\n        </Flex>\n    )\n})\n\nexport default BeerItem\n","import { Center, Flex, Image, Text } from '@chakra-ui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { MdRemoveCircle } from 'react-icons/md'\nimport { useStores } from '../../store/root'\nimport roundTwoDecimal from '../../utils/roundTwoDecimal'\nconst CartItem = observer(({ _id }) => {\n    const { cartStore } = useStores()\n    const item = cartStore.cart.get(_id)\n    return (\n        <Flex pl={8} py={2} align=\"center\">\n            <Image src={`/image/${_id}.png`} w=\"20px\" />\n            <Text ml={3} fontWeight=\"black\">\n                {item.inventory.name}\n            </Text>\n            <Text ml={2} color=\"grey.300\">\n                x\n            </Text>\n            <Text ml={1} fontWeight=\"bold\" color=\"primary.100\">\n                {item.count}\n            </Text>\n            <Flex justify=\"flex-end\" fontSize=\"xl\" fontWeight=\"bold\" flex={1}>\n                <Text>${roundTwoDecimal(item.inventory._cost * item.count)}</Text>\n            </Flex>\n            <Center px={2} cursor=\"pointer\" onClick={() => cartStore.remove(_id)}>\n                <MdRemoveCircle color=\"red\" size={16} />\n            </Center>\n        </Flex>\n    )\n})\n\nexport default CartItem\n","import React, { useState, useEffect } from 'react'\nimport { Box, Text, Center, Flex, Image, Circle, Icon, Spacer, Button } from '@chakra-ui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useStores } from '../../store/root'\nimport BeerItem from './BeerItem'\nimport CartItem from './CartItem'\n\nconst Menu = observer(() => {\n    const { inventoryStore, uiStore, cartStore } = useStores()\n    function cartTotal() {\n        if (cartStore.cart.size) {\n            return (\n                <Text color=\"white\" fontSize=\"xl\" fontWeight=\"bold\" mr={4}>\n                    {cartStore.totalCost}\n                </Text>\n            )\n        } else {\n            return (\n                <Text color=\"grey.300\" fontSize=\"xl\" fontWeight=\"thin\" mr={2}>\n                    (Empty)\n                </Text>\n            )\n        }\n    }\n    return (\n        <Flex w=\"400px\" bg=\"secondary.300\" direction=\"column\" h=\"100vh\" zIndex={4}>\n            <Flex p={6} py={5} align=\"center\" borderBottomWidth=\"1px\">\n                <Text>Your Cart</Text>\n                {cartStore.cart.size > 0 && (\n                    <Center ml={1} boxSize={4} bg=\"red\" mt={-4} fontSize=\"xs\" fontWeight=\"bold\" rounded=\"full\">\n                        <Text ml=\"-1px\" mt=\"1px\">\n                            {cartStore.cart.size}\n                        </Text>\n                    </Center>\n                )}\n                <Spacer />\n                {cartTotal()}\n            </Flex>\n            <Flex direction=\"column\" overflowY=\"auto\" css={uiStore.scrollCSS} pr={1}>\n                {cartStore.cart.size > 0 && (\n                    <>\n                        <Box mt={3} />\n                        {cartStore.array.map((x) => {\n                            return <CartItem key={x._id} _id={x._id} />\n                        })}\n                        <Box mt={3} />\n                        <Flex justify=\"flex-end\">\n                            <Button bg=\"primary.100\" size=\"sm\" m={3} mt={0} onClick={() => (uiStore.checkout = true)}>\n                                Checkout\n                            </Button>\n                        </Flex>\n                        <Flex borderBottomWidth=\"1px\" />\n                    </>\n                )}\n                {Array.from(inventoryStore.inventory.values()).map((x) => {\n                    return <BeerItem key={x._id} _id={x._id} />\n                })}\n            </Flex>\n        </Flex>\n    )\n})\n\nexport default Menu\n","import { Box, Flex, Spacer, Text } from '@chakra-ui/layout'\nimport React from 'react'\nimport './app.css'\nimport BeerPreview from './components/beerPreview/BeerPreview'\nimport Checkout from './components/Checkout'\nimport Header from './components/header/Header'\nimport Menu from './components/menu/Menu'\n\nconst App = () => {\n    return (\n        <Flex direction=\"column\" w=\"100vw\" h=\"100vh\" bg=\"secondary.200\" position=\"relative\">\n            <Flex flex={1}>\n                <Flex flex={1} direction=\"column\">\n                    <Header />\n                    <BeerPreview />\n                    <Checkout />\n                </Flex>\n                <Menu />\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default App\n","import { extendTheme } from '@chakra-ui/react'\nimport { createBreakpoints } from '@chakra-ui/theme-tools'\n\nconst breakpoints = createBreakpoints({\n    sm: '32em',\n    md: '48em',\n    lg: '62em',\n    xl: '80em',\n    '2xl': '96em',\n})\n\nconst colors = {\n    secondary: {\n        100: '#2d2d2d',\n        150: '#262626',\n        200: '#141316',\n        300: '#0d0c0e',\n    },\n    grey: {\n        100: '#fafafa',\n        200: '#c7c7c7',\n        300: '#838383',\n    },\n    input: {\n        100: '#474747',\n    },\n    primary: {\n        100: '#ff6a00',\n        200: '#e85900',\n    },\n    blue: {\n        100: '#4694ff',\n        200: '#2367cc',\n    },\n    green: {\n        100: '#00a300',\n    },\n    red: {\n        50: '#d05f5f',\n        100: '#d64141',\n    },\n    gold: {\n        100: '#fee3ae',\n    },\n}\n\nconst sizes = {}\n\nexport const theme = extendTheme({\n    colors,\n    sizes,\n    components: { Button: { baseStyle: { _focus: { boxShadow: 'none' } } } },\n    shadows: { outline: '0 !important' },\n    config: {\n        useSystemColorMode: false,\n        initialColorMode: 'dark',\n    },\n    breakpoints,\n    fonts: {\n        heading: 'Open Sans',\n        body: 'Open Sans',\n    },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { theme } from './theme/theme'\n\nexport const darkTheme = ReactDOM.render(\n    <React.StrictMode>\n        <ChakraProvider theme={theme}>\n            <App />\n        </ChakraProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n"],"sourceRoot":""}